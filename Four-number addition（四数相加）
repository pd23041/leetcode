# 首先定义 一个unordered_map，key放a和b两数之和，value 放a和b两数之和出现的次数。
# 遍历大A和大B数组，统计两个数组元素之和，和出现的次数，放到map中。
# 定义int变量count，用来统计 a+b+c+d = 0 出现的次数。
# 在遍历大C和大D数组，找到如果 0-(c+d) 在map中出现过的话，就用count把map中key对应的value也就是出现次数统计出来。
# 最后返回统计值 count 就可以了


class Solution(object):
    def fourSumCount(self, nums1, nums2, nums3, nums4):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :type nums3: List[int]
        :type nums4: List[int]
        :rtype: int
        """
        hash = dict()
        for n1 in nums1:
            for n2 in nums2:
                result = n1 + n2
                if result in hash:
                    hash[result] += 1
                else:
                    hash[result] = 1

        count = 0
        for n3 in nums3:
            for n4 in nums4:
                res = 0 - (n3 + n4)
                if res in hash:
                    count += hash[res]
        return count
